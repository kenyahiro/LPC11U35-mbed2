# This file was automagically generated by mbed.org. For more information,
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

###############################################################################
# Boiler-plate

# cross-platform directory manipulation
ifeq ($(shell echo $$OS),$$OS)
    MAKEDIR = if not exist "$(1)" mkdir "$(1)"
    RM = rmdir /S /Q "$(1)"
else
    MAKEDIR = '$(SHELL)' -c "mkdir -p \"$(1)\""
    RM = '$(SHELL)' -c "rm -rf \"$(1)\""
endif

OBJDIR := BUILD
# Move to the build directory
ifeq (,$(filter $(OBJDIR),$(notdir $(CURDIR))))
.SUFFIXES:
mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
MAKETARGET = '$(MAKE)' --no-print-directory -C $(OBJDIR) -f '$(mkfile_path)' \
		'SRCDIR=$(CURDIR)' $(MAKECMDGOALS)
.PHONY: $(OBJDIR) clean
all:
	+@$(call MAKEDIR,$(OBJDIR))
	+@$(MAKETARGET)
$(OBJDIR): all
Makefile : ;
% :: $(OBJDIR) ; :
clean :
	$(call RM,$(OBJDIR))

else

# trick rules into thinking we are in the root, when we are in the bulid dir
VPATH = ..

# Boiler-plate
###############################################################################
# Project settings

PROJECT := myprog5


# Project settings
###############################################################################
# Objects and Paths

OBJECTS += ./src/main.o
OBJECTS += ./mbed-dev/cmsis/TARGET_CORTEX_M/mbed_tz_context.o
OBJECTS += ./mbed-dev/drivers/AnalogIn.o
OBJECTS += ./mbed-dev/drivers/BusIn.o
OBJECTS += ./mbed-dev/drivers/BusInOut.o
OBJECTS += ./mbed-dev/drivers/BusOut.o
OBJECTS += ./mbed-dev/drivers/CAN.o
OBJECTS += ./mbed-dev/drivers/Ethernet.o
OBJECTS += ./mbed-dev/drivers/FlashIAP.o
OBJECTS += ./mbed-dev/drivers/I2C.o
OBJECTS += ./mbed-dev/drivers/I2CSlave.o
OBJECTS += ./mbed-dev/drivers/InterruptIn.o
OBJECTS += ./mbed-dev/drivers/InterruptManager.o
OBJECTS += ./mbed-dev/drivers/MbedCRC.o
OBJECTS += ./mbed-dev/drivers/RawSerial.o
OBJECTS += ./mbed-dev/drivers/SPI.o
OBJECTS += ./mbed-dev/drivers/SPISlave.o
OBJECTS += ./mbed-dev/drivers/Serial.o
OBJECTS += ./mbed-dev/drivers/SerialBase.o
OBJECTS += ./mbed-dev/drivers/TableCRC.o
OBJECTS += ./mbed-dev/drivers/Ticker.o
OBJECTS += ./mbed-dev/drivers/Timeout.o
OBJECTS += ./mbed-dev/drivers/Timer.o
OBJECTS += ./mbed-dev/drivers/TimerEvent.o
OBJECTS += ./mbed-dev/drivers/UARTSerial.o
OBJECTS += ./mbed-dev/hal/mbed_critical_section_api.o
OBJECTS += ./mbed-dev/hal/mbed_flash_api.o
OBJECTS += ./mbed-dev/hal/mbed_gpio.o
OBJECTS += ./mbed-dev/hal/mbed_itm_api.o
OBJECTS += ./mbed-dev/hal/mbed_lp_ticker_api.o
OBJECTS += ./mbed-dev/hal/mbed_lp_ticker_wrapper.o
OBJECTS += ./mbed-dev/hal/mbed_pinmap_common.o
OBJECTS += ./mbed-dev/hal/mbed_sleep_manager.o
OBJECTS += ./mbed-dev/hal/mbed_ticker_api.o
OBJECTS += ./mbed-dev/hal/mbed_us_ticker_api.o
OBJECTS += ./mbed-dev/platform/ATCmdParser.o
OBJECTS += ./mbed-dev/platform/CallChain.o
OBJECTS += ./mbed-dev/platform/FileBase.o
OBJECTS += ./mbed-dev/platform/FileHandle.o
OBJECTS += ./mbed-dev/platform/FilePath.o
OBJECTS += ./mbed-dev/platform/FileSystemHandle.o
OBJECTS += ./mbed-dev/platform/LocalFileSystem.o
OBJECTS += ./mbed-dev/platform/Stream.o
OBJECTS += ./mbed-dev/platform/mbed_alloc_wrappers.o
OBJECTS += ./mbed-dev/platform/mbed_application.o
OBJECTS += ./mbed-dev/platform/mbed_assert.o
OBJECTS += ./mbed-dev/platform/mbed_board.o
OBJECTS += ./mbed-dev/platform/mbed_critical.o
OBJECTS += ./mbed-dev/platform/mbed_error.o
OBJECTS += ./mbed-dev/platform/mbed_error_hist.o
OBJECTS += ./mbed-dev/platform/mbed_interface.o
OBJECTS += ./mbed-dev/platform/mbed_mem_trace.o
OBJECTS += ./mbed-dev/platform/mbed_mktime.o
OBJECTS += ./mbed-dev/platform/mbed_poll.o
OBJECTS += ./mbed-dev/platform/mbed_retarget.o
OBJECTS += ./mbed-dev/platform/mbed_rtc_time.o
OBJECTS += ./mbed-dev/platform/mbed_sdk_boot.o
OBJECTS += ./mbed-dev/platform/mbed_semihost_api.o
OBJECTS += ./mbed-dev/platform/mbed_stats.o
OBJECTS += ./mbed-dev/platform/mbed_wait_api_no_rtos.o
OBJECTS += ./mbed-dev/platform/mbed_wait_api_rtos.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/TARGET_MCU_LPC11U35_501/PeripheralPins.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/analogin_api.o
#OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/device/TOOLCHAIN_GCC_ARM/startup_LPC11xx.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/device/cmsis_nvic.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/device/system_LPC11Uxx.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/gpio_api.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/gpio_irq_api.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/i2c_api.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/pinmap.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/port_api.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/pwmout_api.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/serial_api.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/sleep.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/spi_api.o
OBJECTS += ./mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/us_ticker.o
OBJECTS += ./src/startup_LPC11xx.o

INCLUDE_PATHS += -I../.
INCLUDE_PATHS += -I.././mbed-dev
INCLUDE_PATHS += -I.././mbed-dev/cmsis
INCLUDE_PATHS += -I.././mbed-dev/cmsis/TARGET_CORTEX_M
INCLUDE_PATHS += -I.././mbed-dev/drivers
INCLUDE_PATHS += -I.././mbed-dev/hal
INCLUDE_PATHS += -I.././mbed-dev/hal/storage_abstraction
INCLUDE_PATHS += -I.././mbed-dev/platform
INCLUDE_PATHS += -I.././mbed-dev/targets/TARGET_NXP
INCLUDE_PATHS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX
INCLUDE_PATHS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/TARGET_MCU_LPC11U35_501
INCLUDE_PATHS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/TARGET_MCU_LPC11U35_501/TARGET_LPC11U35_501
INCLUDE_PATHS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/device

LIBRARY_PATHS :=
LIBRARIES :=
#LINKER_SCRIPT ?= .././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/device/TOOLCHAIN_GCC_ARM/TARGET_LPC11U35_501/LPC11U35.ld
LINKER_SCRIPT ?= .././src/LPC11U35.ld

# Objects and Paths
###############################################################################
# Tools and Flags

AS      = arm-none-eabi-gcc
CC      = arm-none-eabi-gcc
CPP     = arm-none-eabi-g++
LD      = arm-none-eabi-gcc
ELF2BIN = arm-none-eabi-objcopy
PREPROC = arm-none-eabi-cpp -E -P -Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n --specs=nano.specs -mcpu=cortex-m0 -mthumb


C_FLAGS += -std=gnu99
C_FLAGS += -include
C_FLAGS += mbed_config.h
C_FLAGS += -D__CORTEX_M0
C_FLAGS += -DCMSIS_VECTAB_VIRTUAL
C_FLAGS += -D__MBED__=1
C_FLAGS += -DDEVICE_I2CSLAVE=1
C_FLAGS += -DTARGET_LIKE_MBED
C_FLAGS += -DTARGET_NXP
C_FLAGS += -DDEVICE_PORTINOUT=1
C_FLAGS += -D__MBED_CMSIS_RTOS_CM
C_FLAGS += -D__CMSIS_RTOS
C_FLAGS += -DTARGET_LPC11UXX
C_FLAGS += -DTOOLCHAIN_GCC
C_FLAGS += -DMBED_BUILD_TIMESTAMP=1609338445.66
C_FLAGS += -DTARGET_LIKE_CORTEX_M0
C_FLAGS += -DTARGET_DEBUG
C_FLAGS += -DARM_MATH_CM0
C_FLAGS += -DTARGET_M0
C_FLAGS += -DDEVICE_SERIAL=1
C_FLAGS += -DTARGET_MCU_LPC11U35_501
C_FLAGS += -DDEVICE_INTERRUPTIN=1
C_FLAGS += -DTARGET_LPCTarget
C_FLAGS += -DTARGET_CORTEX
C_FLAGS += -DDEVICE_I2C=1
C_FLAGS += -DDEVICE_PORTOUT=1
C_FLAGS += -DTARGET_LPC11U35_501
C_FLAGS += -DDEVICE_PORTIN=1
C_FLAGS += -DDEVICE_SLEEP=1
C_FLAGS += -DTOOLCHAIN_GCC_ARM
C_FLAGS += -DDEVICE_SPI=1
C_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"
C_FLAGS += -DDEVICE_SPISLAVE=1
C_FLAGS += -DDEVICE_ANALOGIN=1
C_FLAGS += -DDEVICE_PWMOUT=1
C_FLAGS += -DTARGET_CORTEX_M
C_FLAGS += -include
C_FLAGS += mbed_config.h
C_FLAGS += -std=gnu99
C_FLAGS += -c
C_FLAGS += -Wall
C_FLAGS += -Wextra
C_FLAGS += -Wno-unused-parameter
C_FLAGS += -Wno-missing-field-initializers
C_FLAGS += -fmessage-length=0
C_FLAGS += -fno-exceptions
C_FLAGS += -fno-builtin
C_FLAGS += -ffunction-sections
C_FLAGS += -fdata-sections
C_FLAGS += -funsigned-char
C_FLAGS += -MMD
C_FLAGS += -fno-delete-null-pointer-checks
C_FLAGS += -fomit-frame-pointer
#C_FLAGS += -O0
#C_FLAGS += -g3
C_FLAGS += -Os
C_FLAGS += -g1
#C_FLAGS += -DMBED_DEBUG
#C_FLAGS += -DMBED_TRAP_ERRORS_ENABLED=1
C_FLAGS += -DMBED_RTOS_SINGLE_THREAD
C_FLAGS += -mcpu=cortex-m0
C_FLAGS += -mthumb

CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h
CXX_FLAGS += -D__CORTEX_M0
CXX_FLAGS += -DCMSIS_VECTAB_VIRTUAL
CXX_FLAGS += -D__MBED__=1
CXX_FLAGS += -DDEVICE_I2CSLAVE=1
CXX_FLAGS += -DTARGET_LIKE_MBED
CXX_FLAGS += -DTARGET_NXP
CXX_FLAGS += -DDEVICE_PORTINOUT=1
CXX_FLAGS += -D__MBED_CMSIS_RTOS_CM
CXX_FLAGS += -D__CMSIS_RTOS
CXX_FLAGS += -DTARGET_LPC11UXX
CXX_FLAGS += -DTOOLCHAIN_GCC
CXX_FLAGS += -DMBED_BUILD_TIMESTAMP=1609338445.66
CXX_FLAGS += -DTARGET_LIKE_CORTEX_M0
CXX_FLAGS += -DTARGET_DEBUG
CXX_FLAGS += -DARM_MATH_CM0
CXX_FLAGS += -DTARGET_M0
CXX_FLAGS += -DDEVICE_SERIAL=1
CXX_FLAGS += -DTARGET_MCU_LPC11U35_501
CXX_FLAGS += -DDEVICE_INTERRUPTIN=1
CXX_FLAGS += -DTARGET_LPCTarget
CXX_FLAGS += -DTARGET_CORTEX
CXX_FLAGS += -DDEVICE_I2C=1
CXX_FLAGS += -DDEVICE_PORTOUT=1
CXX_FLAGS += -DTARGET_LPC11U35_501
CXX_FLAGS += -DDEVICE_PORTIN=1
CXX_FLAGS += -DDEVICE_SLEEP=1
CXX_FLAGS += -DTOOLCHAIN_GCC_ARM
CXX_FLAGS += -DDEVICE_SPI=1
CXX_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE=\"cmsis_nvic.h\"
CXX_FLAGS += -DDEVICE_SPISLAVE=1
CXX_FLAGS += -DDEVICE_ANALOGIN=1
CXX_FLAGS += -DDEVICE_PWMOUT=1
CXX_FLAGS += -DTARGET_CORTEX_M
CXX_FLAGS += -include
CXX_FLAGS += mbed_config.h
CXX_FLAGS += -std=gnu++98
CXX_FLAGS += -fno-rtti
CXX_FLAGS += -Wvla
CXX_FLAGS += -c
CXX_FLAGS += -Wall
CXX_FLAGS += -Wextra
CXX_FLAGS += -Wno-unused-parameter
CXX_FLAGS += -Wno-missing-field-initializers
CXX_FLAGS += -fmessage-length=0
CXX_FLAGS += -fno-exceptions
CXX_FLAGS += -fno-builtin
CXX_FLAGS += -ffunction-sections
CXX_FLAGS += -fdata-sections
CXX_FLAGS += -funsigned-char
CXX_FLAGS += -MMD
CXX_FLAGS += -fno-delete-null-pointer-checks
CXX_FLAGS += -fomit-frame-pointer
#CXX_FLAGS += -O0
#CXX_FLAGS += -g3
CXX_FLAGS += -Os
CXX_FLAGS += -g1
#CXX_FLAGS += -DMBED_DEBUG
#CXX_FLAGS += -DMBED_TRAP_ERRORS_ENABLED=1
CXX_FLAGS += -DMBED_RTOS_SINGLE_THREAD
CXX_FLAGS += -mcpu=cortex-m0
CXX_FLAGS += -mthumb

ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -D__CORTEX_M0
ASM_FLAGS += -DCMSIS_VECTAB_VIRTUAL
ASM_FLAGS += -DCMSIS_VECTAB_VIRTUAL_HEADER_FILE="cmsis_nvic.h"
ASM_FLAGS += -D__MBED_CMSIS_RTOS_CM
ASM_FLAGS += -DARM_MATH_CM0
ASM_FLAGS += -D__CMSIS_RTOS
ASM_FLAGS += -I../.
ASM_FLAGS += -I.././mbed-dev
ASM_FLAGS += -I.././mbed-dev/cmsis
ASM_FLAGS += -I.././mbed-dev/cmsis/TARGET_CORTEX_M
ASM_FLAGS += -I.././mbed-dev/drivers
ASM_FLAGS += -I.././mbed-dev/hal
ASM_FLAGS += -I.././mbed-dev/hal/storage_abstraction
ASM_FLAGS += -I.././mbed-dev/platform
ASM_FLAGS += -I.././mbed-dev/targets/TARGET_NXP
ASM_FLAGS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX
ASM_FLAGS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/TARGET_MCU_LPC11U35_501
ASM_FLAGS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/TARGET_MCU_LPC11U35_501/TARGET_LPC11U35_501
ASM_FLAGS += -I.././mbed-dev/targets/TARGET_NXP/TARGET_LPC11UXX/device
ASM_FLAGS += -include
ASM_FLAGS += ./mbed_config.h
ASM_FLAGS += -x
ASM_FLAGS += assembler-with-cpp
ASM_FLAGS += -c
ASM_FLAGS += -Wall
ASM_FLAGS += -Wextra
ASM_FLAGS += -Wno-unused-parameter
ASM_FLAGS += -Wno-missing-field-initializers
ASM_FLAGS += -fmessage-length=0
ASM_FLAGS += -fno-exceptions
ASM_FLAGS += -fno-builtin
ASM_FLAGS += -ffunction-sections
ASM_FLAGS += -fdata-sections
ASM_FLAGS += -funsigned-char
ASM_FLAGS += -MMD
ASM_FLAGS += -fno-delete-null-pointer-checks
ASM_FLAGS += -fomit-frame-pointer
#ASM_FLAGS += -O0
#ASM_FLAGS += -g3
ASM_FLAGS += -Os
ASM_FLAGS += -g1
#ASM_FLAGS += -DMBED_DEBUG
#ASM_FLAGS += -DMBED_TRAP_ERRORS_ENABLED=1
ASM_FLAGS += -DMBED_RTOS_SINGLE_THREAD
ASM_FLAGS += -mcpu=cortex-m0
ASM_FLAGS += -mthumb


LD_FLAGS :=-Wl,--gc-sections -Wl,--wrap,main -Wl,--wrap,_malloc_r -Wl,--wrap,_free_r -Wl,--wrap,_realloc_r -Wl,--wrap,_memalign_r -Wl,--wrap,_calloc_r -Wl,--wrap,exit -Wl,--wrap,atexit -Wl,-n --specs=nano.specs -mcpu=cortex-m0 -mthumb
LD_SYS_LIBS :=-Wl,--start-group -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys  -Wl,--end-group

# Tools and Flags
###############################################################################
# Rules

.PHONY: all lst size


all: $(PROJECT).bin $(PROJECT).hex size


.s.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"

	@$(AS) -c $(ASM_FLAGS) -o $@ $<



.S.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Assemble: $(notdir $<)"

	@$(AS) -c $(ASM_FLAGS) -o $@ $<


.c.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CC) $(C_FLAGS) $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	+@$(call MAKEDIR,$(dir $@))
	+@echo "Compile: $(notdir $<)"
	@$(CPP) $(CXX_FLAGS) $(INCLUDE_PATHS) -o $@ $<


$(PROJECT).link_script.ld: $(LINKER_SCRIPT)
	@$(PREPROC) $< -o $@



$(PROJECT).elf: $(OBJECTS) $(SYS_OBJECTS) $(PROJECT).link_script.ld
	+@echo "link: $(notdir $@)"
	@$(LD) $(LD_FLAGS) -T $(filter-out %.o, $^) $(LIBRARY_PATHS) --output $@ $(filter %.o, $^) $(LIBRARIES) $(LD_SYS_LIBS)


$(PROJECT).bin: $(PROJECT).elf
	$(ELF2BIN) -O binary $< $@
	+@echo "===== bin file ready to flash: $(OBJDIR)/$@ ====="

$(PROJECT).hex: $(PROJECT).elf
	$(ELF2BIN) -O ihex $< $@


# Rules
###############################################################################
# Dependencies

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)
endif

# Dependencies
###############################################################################
